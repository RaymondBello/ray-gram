{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","console","log","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAYeA,EAVD,WACZ,OACE,yBAAKC,UAAU,SACb,4CACA,iCACA,2BAAG,2IAAmH,6BAAtH,IAAgI,4D,2CCQtIC,gBAVqB,CACjBC,OAAQ,0CACRC,WAAY,2BACZC,YAAa,kCACbC,UAAW,WACXC,cAAe,uBACfC,kBAAmB,eACnBC,MAAO,8CAKX,IAAMC,EAAiBR,YACjBS,EAAmBT,cACnBU,EAAYV,YAAmBW,WAAWC,gBCYjCC,EA5BI,SAACC,GAAU,IAAD,EACOC,mBAAS,GADhB,mBAClBC,EADkB,KACRC,EADQ,OAECF,mBAAS,MAFV,mBAElBG,EAFkB,KAEXC,EAFW,OAGHJ,mBAAS,MAHN,mBAGlBK,EAHkB,KAGbC,EAHa,KAwBzB,OAnBAC,qBAAU,WAEN,IAAMC,EAAaf,EAAegB,IAAIV,EAAKW,MACrCC,EAAgBjB,EAAiBkB,WAAW,UAElDJ,EAAWK,IAAId,GAAMe,GAAG,iBAAiB,SAACC,GACtC,IAAIC,EAAcD,EAAKE,iBAAmBF,EAAKG,WAAc,IAC7DhB,EAAYc,MACb,SAACG,GACIf,EAASe,KAJjB,sBAKG,8BAAAC,EAAA,sEACuBZ,EAAWa,iBADlC,OACWhB,EADX,OAEWiB,EAAY3B,IAElBgB,EAAcY,IAAI,CAAElB,MAAKiB,cACzBhB,EAAOD,GALZ,8CAOJ,CAACN,IAEG,CAAEE,WAAUI,MAAKF,U,OCHbqB,EApBK,SAAC,GAAuB,IAArBzB,EAAoB,EAApBA,KAAM0B,EAAc,EAAdA,QAAc,EAEb3B,EAAWC,GAA7BM,EAF+B,EAE/BA,IAAKJ,EAF0B,EAE1BA,SAUb,OATAyB,QAAQC,IAAI1B,EAAUI,GAEtBE,qBAAU,WAEHF,GACCoB,EAAQ,QAEb,CAACpB,EAAKoB,IAGL,kBAAC,IAAOG,IAAR,CAAY5C,UAAU,eAClB6C,QAAS,CAAEC,MAAO,GAClBC,QAAS,CAAED,MAAO7B,EAAW,QCsB1B+B,EAtCI,WAAO,IAAD,EAEGhC,mBAAS,MAFZ,mBAEdD,EAFc,KAER0B,EAFQ,OAGKzB,mBAAS,MAHd,mBAGdG,EAHc,KAGPC,EAHO,KAKf6B,EAAQ,CAAC,YAAa,cAgB5B,OACI,8BACI,+BACI,2BAAOC,KAAK,OAAOC,SAjBT,SAACC,GACnB,IAAIC,EAAWD,EAAEE,OAAOC,MAAM,GAE1BF,GAAYJ,EAAMO,SAASH,EAASH,OACpCT,EAAQY,GACRjC,EAAS,MAGTqB,EAAQ,MACRrB,EAAS,gDASL,oCAIJ,yBAAKpB,UAAU,UACVmB,GAAS,yBAAKnB,UAAU,SAASmB,GACjCJ,GAAQ,6BAAMA,EAAKW,MACnBX,GAAQ,kBAAC,EAAD,CAAaA,KAAMA,EAAM0B,QAASA,O,OCV5CgB,EAtBM,SAAC7B,GAAgB,IAAD,EACTZ,mBAAS,IADA,mBAC1B0C,EAD0B,KACpBC,EADoB,KAmBjC,OAhBApC,qBAAU,WAEN,IAAMqC,EAAQlD,EAAiBkB,WAAWA,GACrCiC,QAAQ,YAAa,QACrBC,YAAW,SAAC/B,GACT,IAAIgC,EAAY,GAChBhC,EAAKiC,SAAQ,SAAAC,GACTF,EAAUG,KAAV,2BAAoBD,EAAIE,QAAxB,IAAgCC,GAAIH,EAAIG,SAE5CT,EAAQI,MAGhB,OAAO,kBAAMH,OAEd,CAAEhC,IAEE,CAAE8B,SCMEW,EAxBG,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eAERZ,EAASD,EAAa,UAAtBC,KAGR,OAFAhB,QAAQC,IAAIe,GAGR,yBAAK1D,UAAU,YACV0D,GAAQA,EAAKa,KAAI,SAAAN,GAAG,OACjB,kBAAC,IAAOrB,IAAR,CAAY5C,UAAU,WAAWwE,IAAKP,EAAIG,GACtCK,QAAM,EACNC,WAAY,CAACC,QAAS,GACtBC,QAAS,kBAAMN,EAAeL,EAAI5C,OAElC,kBAAC,IAAOwD,IAAR,CAAYC,IAAKb,EAAI5C,IAAK0D,IAAI,eAC1BlC,QAAS,CAAE8B,QAAS,GACpB5B,QAAS,CAAE4B,QAAS,GACpBK,WAAY,CAAEC,MAAO,WCM9BC,EAtBD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAab,EAAqB,EAArBA,eAS1B,OACI,kBAAC,IAAO1B,IAAR,CAAY5C,UAAU,WAAW4E,QARjB,SAACxB,GAEbA,EAAEE,OAAO8B,UAAUC,SAAS,aAC5Bf,EAAe,OAMfzB,QAAS,CAAE8B,QAAS,GACpB5B,QAAS,CAAE4B,QAAS,IAEpB,kBAAC,IAAOE,IAAR,CAAYC,IAAKK,EAAaJ,IAAI,eAC9BlC,QAAS,CAAEyC,EAAG,UACdvC,QAAS,CAAEuC,EAAG,OCCfC,MAff,WAAgB,IAAD,EAEyBvE,mBAAS,MAFlC,mBAENmE,EAFM,KAEOb,EAFP,KAIb,OACE,yBAAKtE,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWsE,eAAgBA,IAC1Ba,GAAe,kBAAC,EAAD,CAAOA,YAAaA,EAAab,eAAgBA,IACjE,4CAAiB,6BAAjB,IAA2B,uBAAGkB,KAAK,qCAAR,YAA3B,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f1965ec1.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>Ray's Corner</h1>\n      <h2> </h2>\n      <p><b>\"Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away\"</b><br></br> <i>- Antoine de Saint-Exupery</i></p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA0RS55MKScIKU4t7fXa6-vB8Z7eKDX4zE\",\n    authDomain: \"ray-gram.firebaseapp.com\",\n    databaseURL: \"https://ray-gram.firebaseio.com\",\n    projectId: \"ray-gram\",\n    storageBucket: \"ray-gram.appspot.com\",\n    messagingSenderId: \"365447052453\",\n    appId: \"1:365447052453:web:52dd9f9bc79221c479214c\"\n  };\n  // Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n  \nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, projectFirestore, timestamp };\n\n","import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = (file) => {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    useEffect(() => {\n        // references \n        const storageRef = projectStorage.ref(file.name);\n        const collectionRef = projectFirestore.collection('images');\n\n        storageRef.put(file).on('state_changed', (snap) => {\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, (err) => {\n                setError(err);\n        }, async () => {\n                const url = await storageRef.getDownloadURL();\n                const createdAt = timestamp();\n                \n                collectionRef.add({ url, createdAt });\n                setUrl(url);\n        })\n    }, [file])\n    \n    return { progress, url, error }\n    \n}\n\nexport default useStorage;","import React, { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\nimport { motion } from 'framer-motion';\n\nconst ProgressBar = ({ file, setFile }) => {\n\n    const { url, progress } = useStorage(file);\n    console.log(progress, url);\n\n    useEffect(() => {\n\n        if(url) {\n            setFile(null);\n        }\n    }, [url, setFile])\n    \n    return (\n        <motion.div className=\"progress-bar\"\n            initial={{ width: 0 }}\n            animate={{ width: progress + '%'}}\n        ></motion.div>\n    )\n}\n\nexport default ProgressBar;","import React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () => {\n\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState(null);\n\n    const types = ['image/png', 'image/jpeg'];\n\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n\n        if (selected && types.includes(selected.type)) {\n            setFile(selected);\n            setError('');\n        }\n        else {\n            setFile(null);\n            setError('Please select an image file (png or jpeg');\n        }\n        // console.log(selected);\n    }\n\n    return (\n        <form>\n            <label>\n                <input type=\"file\" onChange={changeHandler} />\n                <span>\n                    +\n                </span>\n            </label>\n            <div className=\"output\">\n                {error && <div className=\"error\">{error}</div>}\n                {file && <div>{file.name}</div>}\n                {file && <ProgressBar file={file} setFile={setFile} /> }\n            </div>\n        </form>\n    );\n}\n\nexport default UploadForm;\n","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(() => {\n\n        const unsub = projectFirestore.collection(collection)\n            .orderBy('createdAt', 'desc')\n            .onSnapshot((snap) => {\n                let documents = [];\n                snap.forEach(doc => {\n                    documents.push({ ...doc.data(), id: doc.id });\n                });\n                setDocs(documents);\n            });\n        \n        return () => unsub();\n\n    } ,[ collection ])\n\n    return { docs };\n}\n\nexport default useFirestore;","import React from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({setSelectedImg}) => {\n\n    const { docs } = useFirestore('images');\n    console.log(docs);\n\n    return (\n        <div className=\"img-grid\">\n            {docs && docs.map(doc => (\n                <motion.div className=\"img-wrap\" key={doc.id}\n                    layout\n                    whileHover={{opacity: 1}}\n                    onClick={() => setSelectedImg(doc.url)}\n                >\n                    <motion.img src={doc.url} alt=\"uploaded pic\"\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        transition={{ delay: 1 }}\n                    />\n                </motion.div>\n            ))}\n        </div>\n    )\n}\n\nexport default ImageGrid;","import React from 'react';\nimport { motion } from 'framer-motion';\n\n\nconst Modal = ({ selectedImg, setSelectedImg }) => {\n    \n    const handleClick = (e) => {\n\n        if (e.target.classList.contains('backdrop')) {\n            setSelectedImg(null);\n        }\n    }\n\n    return (\n        <motion.div className=\"backdrop\" onClick={handleClick}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n        >\n            <motion.img src={selectedImg} alt=\"enlarged pic\"\n                initial={{ y: \"-100vh\" }}\n                animate={{ y: 0 }}\n            />\n        </motion.div>\n    )\n}\n\nexport default Modal;","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\nfunction App() {\n\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />}\n      <h6> Designed by:<br></br> <a href=\"http://www.instagram.com/ray.vss/\">@ray.vss</a> </h6>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}